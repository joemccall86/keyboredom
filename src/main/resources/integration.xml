<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:int="http://www.springframework.org/schema/integration"
        xmlns:int-twitter="http://www.springframework.org/schema/integration/twitter"
        xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/integration 
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/twitter 
        http://www.springframework.org/schema/integration/twitter/spring-integration-twitter.xsd
        http://www.springframework.org/schema/integration/stream
        http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
        ">


    <int-twitter:search-inbound-channel-adapter
            query="from:SpringSource"
            channel="incomingTweets">
        <int:poller fixed-rate="5000" max-messages-per-poll="3"/>
    </int-twitter:search-inbound-channel-adapter>

    <bean id="mongoDbFactory" class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
        <constructor-arg>
            <bean class="com.mongodb.Mongo"/>
        </constructor-arg>
        <constructor-arg value="test"/>
    </bean>

    <int:chain input-channel="incomingTweets" output-channel="nullChannel">
        <!-- Transform the HTML escape codes -->
        <int:transformer
                expression="T(org.apache.commons.lang.StringEscapeUtils).unescapeHtml(payload.text)"/>

        <!-- Upper case the entire thing -->
        <int:transformer
                expression="payload.toUpperCase()"/>

        <!-- Convert to a collection compatible store -->
        <int:transformer
                expression="T(java.util.Arrays).asList(payload.toCharArray())"/>

        <!-- Splitter default behavior splits each element into a new message -->
        <int:splitter />

        <int:transformer
                expression="T(com.mongodb.BasicDBObjectBuilder).start().add('text', payload.toString()).get()" />

        <!-- Store it in the database -->
        <int:service-activator
                expression="@mongoDbFactory.db.getCollection('texts').insert(payload)"/>
    </int:chain>

</beans>

